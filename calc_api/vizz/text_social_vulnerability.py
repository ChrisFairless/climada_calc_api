from string import Template
from millify import millify
import numpy as np

from calc_api.vizz.util import options_return_period_to_description, options_scenario_to_description
from calc_api.vizz import schemas_widgets


def generate_social_vulnerability_widget_text_no_data(
        hazard_type
):
    return [_generate_social_vulnerability_widget_hazard_overview_text(hazard_type)]


def generate_social_vulnerability_widget_text(
        soc_vuln,
        exp,
        hazard_type,
        location_name,
        location_type
):
    intro_text = _generate_social_vulnerability_widget_intro_text()
    haz_overview_text = _generate_social_vulnerability_widget_hazard_overview_text(hazard_type)
    # soc_vuln_data_text = _generate_social_vulnerability_widget_data_text(
    #     soc_vuln,
    #     location_name,
    #     location_type
    # )

    # TODO make useful social vulnerability information here
    return [intro_text, haz_overview_text]


def _generate_social_vulnerability_widget_intro_text():
    text = "Not everyone experiences the effects of climate change equally. Societies are structured giving some groups disproportionate access to resources which in turn affects their vulnerability to extreme events and ability to adapt. "
    return schemas_widgets.GeneratedText(
        template=text,
        values=[]
    )


def _generate_social_vulnerability_widget_hazard_overview_text(hazard_type):
    if hazard_type == 'tropical_cyclone':
        text = "Tropical cyclones have disproportionate effects on the elderly, the disabled, children under the age of 5, migrant communities and people without their own means of transport. These are collectively identified as the population at greater risk to tropical storms and adaptation measures should be targeted accordingly."
    elif hazard_type == 'extreme_heat':
        text = "Extreme heat has disproportionate effects on the elderly, the disabled, children under the age of 5, outdoor workers and indoor workers without cooling, people with co-morbidities, and people unable to cool their homes. These are collectively identified as the population at greater risk to extreme heat and adaptation measures should be targeted accordingly."
    else:
        raise ValueError(f'{hazard_type} is not in my list of pre-prepared hazards for text generation')

    return schemas_widgets.GeneratedText(
        template=text,
        values=[]
    )



def _generate_social_vulnerability_widget_data_text(
        soc_vuln,
        location_name,
        location_type):

    # TODO provide national context
    if location_type != 'country':
        text = Template(
            'Communities in $location are $vuln_inter_comparison vulnerable than in the whole of $country'
        )

    # TODO talk about intracommunity vulnerability
    if len(soc_vuln) > 10:
        text = Template(
            'In our vulnerability data $location $vuln_intra_description'
        )
        min_vuln = min(soc_vuln['rwi'])
        max_vuln = max(soc_vuln['rwi'])
        vuln_intra_description = '[[PLACEHOLDER VULN TEXT]]'
        text = text.substitute(location=location_name, vuln_intra_description=vuln_intra_description)

    else:
        text = Template(
            'In our vulnerability data, $location is too small to talk variations within the community.'
        )
        text = text.substitute(location=location_name)

    return schemas_widgets.GeneratedText(
        template=Template('[[PLACEHOLDER VULNERABILITY TEXT]]'),
        values=[]
    )
